
import { Pool } from 'pg';

// Utiliser la DATABASE_URL de l'environnement Replit
const DATABASE_URL = process.env.DATABASE_URL;

if (!DATABASE_URL) {
  console.error('‚ùå DATABASE_URL non d√©finie dans l\'environnement');
  console.log('üí° Assurez-vous d\'avoir cr√©√© une base de donn√©es PostgreSQL dans Replit');
  process.exit(1);
}

console.log('üîç Configuration de la base de donn√©es:');
console.log('DATABASE_URL d√©finie:', !!DATABASE_URL);

const pool = new Pool({
  connectionString: DATABASE_URL,
  ssl: DATABASE_URL.includes('neon.tech') ? { rejectUnauthorized: false } : false,
});

// Test the connection
pool.on('connect', () => {
  console.log('‚úÖ Connect√© √† la base de donn√©es PostgreSQL');
});

pool.on('error', (err) => {
  console.error('‚ùå Erreur de connexion √† la base de donn√©es:', err.message);
  if (err.message.includes('ECONNREFUSED')) {
    console.log('üí° V√©rifiez que la base de donn√©es PostgreSQL est active dans l\'onglet Database');
  }
});

// Test de connexion initial
pool.connect((err, client, release) => {
  if (err) {
    console.error('‚ùå √âchec de la connexion initiale:', err.message);
  } else {
    console.log('‚úÖ Connexion initiale r√©ussie √† PostgreSQL');
    release();
  }
});

export default pool;
