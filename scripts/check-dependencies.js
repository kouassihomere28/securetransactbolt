const { execSync } = require('child_process');
const fs = require('fs');

console.log('üîç V√©rification des d√©pendances pour SecureTransact...\n');

// V√©rifier Node.js
try {
  const nodeVersion = execSync('node --version', { encoding: 'utf8' }).trim();
  console.log(`‚úÖ Node.js: ${nodeVersion}`);
} catch (error) {
  console.log('‚ùå Node.js n\'est pas install√©');
  process.exit(1);
}

// V√©rifier npm
try {
  const npmVersion = execSync('npm --version', { encoding: 'utf8' }).trim();
  console.log(`‚úÖ npm: v${npmVersion}`);
} catch (error) {
  console.log('‚ùå npm n\'est pas install√©');
  process.exit(1);
}

// V√©rifier PostgreSQL
try {
  const pgVersion = execSync('psql --version', { encoding: 'utf8' }).trim();
  console.log(`‚úÖ PostgreSQL: ${pgVersion}`);
  
  // V√©rifier si PostgreSQL est en cours d'ex√©cution
  try {
    execSync('pg_isready -h localhost -p 5432', { stdio: 'ignore' });
    console.log('‚úÖ PostgreSQL est en cours d\'ex√©cution');
  } catch (error) {
    console.log('‚ö†Ô∏è  PostgreSQL est install√© mais pas en cours d\'ex√©cution');
    console.log('üí° D√©marrez PostgreSQL pour continuer');
  }
} catch (error) {
  console.log('‚ùå PostgreSQL n\'est pas install√©');
  console.log('üìñ Consultez docs/POSTGRESQL_SETUP.md pour l\'installation');
}

// V√©rifier le fichier .env
if (fs.existsSync('.env')) {
  console.log('‚úÖ Fichier .env trouv√©');
} else {
  console.log('‚ö†Ô∏è  Fichier .env manquant');
  console.log('üí° Copiez .env.example vers .env');
}

// V√©rifier les modules Node.js
if (fs.existsSync('node_modules')) {
  console.log('‚úÖ Modules Node.js install√©s');
} else {
  console.log('‚ö†Ô∏è  Modules Node.js manquants');
  console.log('üí° Ex√©cutez: npm install');
}

console.log('\nüöÄ V√©rification termin√©e !');